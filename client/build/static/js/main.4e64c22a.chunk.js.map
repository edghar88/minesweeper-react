{"version":3,"sources":["utils/GenerateGameBoard.js","utils/RevealCells.js","components/GameBoard/Cell/index.js","components/GameBoard/Modal/index.js","api/api.js","api/services/scoreService.js","components/GameBoard/NamePrompt/index.js","components/GameBoard/index.js","components/LeaderBoard/index.js","App.js","reportWebVitals.js","index.js"],"names":["randomNumber","min","max","Math","floor","random","RevealCells","cells","xCoord","yCoord","newSafeCells","toShow","push","length","one","pop","i","x","j","y","revealed","value","Cell","props","cellInfo","flagCell","lostGame","revealAdjacent","revealCell","className","isHitMine","onClick","onDoubleClick","e","onContextMenu","flagged","getCellValue","Modal","close","difficulty","setCustomDifficultyParams","setDifficulty","setZoomed","visible","zoomed","React","customHeight","setCustomHeight","customWidth","setCustomWidth","customMines","setCustomMines","darkMode","setDarkMode","difficultySetting","setDifficultySetting","page","setPage","document","querySelector","classList","add","remove","checked","type","onChange","target","api","get","path","axios","then","response","catch","err","post","body","getScores","dateRange","NamePrompt","setUpdatedBoard","timer","name","setName","round","placeholder","href","rel","disabled","user","getDifficulty","time","timestamp","moment","valueOf","GameBoard","boardGrid","setBoardGrid","customDifficultyParams","inClick","setInClick","setLostGame","mineFlagsRemaining","setMineFlagsRemaining","mineLocation","setMineLocation","nonMineCount","setNonMineCount","showModal","setShowModal","showPrompt","setShowPrompt","startedGame","setStartedGame","setTimer","wonGame","setWonGame","preventDefault","newBoardGrid","JSON","parse","stringify","count","CountFlags","Number","revealedBoard","losingX","losingY","RevealAdjacentCells","setTimeout","createBoard","gameParams","newGame","rows","columns","mineCount","board","subColumns","mines","GenerateGameBoard","countUp","clearTimeout","substr","map","gridRow","gridIdx","gridColumn","idx","LeaderBoard","updatedBoard","startOf","setDateRange","scoresBeginner","setScoresBeginner","scoresIntermediate","setScoresIntermediate","scoresExpert","setScoresExpert","selectedRange","setSelectedRange","Promise","all","scores","data","subtract","score","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4e64c22a.chunk.js","sourcesContent":["export default function GenerateGameBoard(rows, columns, mineCount){\n    let board = [];\n    let mineLocation = [];\n  \n    // create subColumns\n    for (let x = 0; x < rows; x++) {\n      let subColumns = [];\n      for (let y = 0; y < columns; y++) {\n        subColumns.push({\n          flagged: false,\n          revealed: false,\n          value: 0,\n          x,\n          y,\n        });\n      }\n      board.push(subColumns);\n    }\n\n    // randomly place bombs\n    let mines = 0;\n    while (mines < mineCount) {\n      let x = randomNumber(0, rows - 1);\n      let y = randomNumber(0, columns - 1);\n    \n      if (board[x][y].value === 0) {\n        board[x][y].value = \"X\";\n        mineLocation.push([x, y]);\n        mines++;\n      }\n    }\n  \n    // add numbers to cell for adjacent bombs\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        if (board[i][j].value === \"X\") {\n          continue;\n        }\n  \n        if (i > 0 && board[i - 1][j].value === \"X\") {\n          board[i][j].value++;\n        }\n  \n        // get number of mines for each edge and add to cell count\n        if (i > 0 && j < columns - 1 && board[i - 1][j + 1].value === \"X\") {\n          board[i][j].value++;\n        }\n        if (j < columns - 1 && board[i][j + 1].value === \"X\") {\n          board[i][j].value++;\n        }\n        if (i < rows - 1 && j < columns - 1 && board[i + 1][j + 1].value === \"X\") {\n          board[i][j].value++;\n        }\n        if (i < rows - 1 && board[i + 1][j].value === \"X\") {\n          board[i][j].value++;\n        }\n        if (i < rows - 1 && j > 0 && board[i + 1][j - 1].value === \"X\") {\n          board[i][j].value++;\n        }\n        if (j > 0 && board[i][j - 1].value === \"X\") {\n          board[i][j].value++;\n        }\n        if (i > 0 && j > 0 && board[i - 1][j - 1].value === \"X\") {\n          board[i][j].value++;\n        }\n      }\n    }\n    return { board, mineLocation };\n  };\n  \n  function randomNumber(min = 0, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }","export const RevealCells = (cells, xCoord, yCoord, newSafeCells) => {\n  let toShow = [];\n  toShow.push(cells[xCoord][yCoord]);\n  while (toShow.length !== 0) {\n      let one = toShow.pop();\n      let i = one.x;\n      let j = one.y;\n      if (!one.revealed) {\n        newSafeCells--;\n        one.revealed = true;\n      }\n      if (one.value !== 0) {\n          break;\n      }\n\n      // reveal adjacent cells\n      if (i > 0 && j > 0 && cells[i - 1][j - 1].value === 0 && !cells[i - 1][j - 1].revealed) {\n        toShow.push(cells[i - 1][j - 1]);\n      }\n      if (i < cells.length - 1 && j < cells[0].length - 1 && cells[i + 1][j + 1].value === 0 && !cells[i + 1][j + 1].revealed) {\n        toShow.push(cells[i + 1][j + 1]);\n      }\n      if (i > 0 && j < cells[0].length - 1 && cells[i - 1][j + 1].value === 0 && !cells[i - 1][j + 1].revealed) {\n        toShow.push(cells[i - 1][j + 1]);\n      }\n      if (i < cells.length - 1 && j > 0 && cells[i + 1][j - 1].value === 0 && !cells[i + 1][j - 1].revealed) {\n        toShow.push(cells[i + 1][j - 1]);\n      }\n      if (i > 0 && cells[i - 1][j].value === 0 && !cells[i - 1][j].revealed) {\n        toShow.push(cells[i - 1][j]);\n      }\n      if (j < cells[0].length - 1 && cells[i][j + 1].value === 0 && !cells[i][j + 1].revealed) {\n        toShow.push(cells[i][j + 1]);\n      }\n      if (i < cells.length - 1 && cells[i + 1][j].value === 0 && !cells[i + 1][j].revealed) {\n        toShow.push(cells[i + 1][j]);\n      }\n      if (j > 0 && cells[i][j - 1].value === 0 && !cells[i][j - 1].revealed) {\n        toShow.push(cells[i][j - 1]);\n      }\n\n      // reveal\n      if (i > 0 && j > 0 && !cells[i - 1][j - 1].revealed) {\n        cells[i - 1][j - 1].revealed = true;\n        newSafeCells--;\n      }\n      if (j > 0 && !cells[i][j - 1].revealed) {\n        cells[i][j - 1].revealed = true;\n        newSafeCells--;\n      }\n  \n      if (i < cells.length - 1 && j > 0 && !cells[i + 1][j - 1].revealed) {\n        cells[i + 1][j - 1].revealed = true;\n        newSafeCells--;\n      }\n      if (i > 0 && !cells[i - 1][j].revealed) {\n        cells[i - 1][j].revealed = true;\n        newSafeCells--;\n      }\n      if (i < cells.length - 1 && !cells[i + 1][j].revealed) {\n        cells[i + 1][j].revealed = true;\n        newSafeCells--;\n      }\n      if (i > 0 && j < cells[0].length - 1 && !cells[i - 1][j + 1].revealed) {\n        cells[i - 1][j + 1].revealed = true;\n        newSafeCells--;\n      }  \n      if (j < cells[0].length - 1 && !cells[i][j + 1].revealed) {\n        cells[i][j + 1].revealed = true;\n        newSafeCells--;\n      }\n      if (i < cells.length - 1 && j < cells[0].length - 1 && !cells[i + 1][j + 1].revealed) {\n        cells[i + 1][j + 1].revealed = true;\n        newSafeCells--;\n      }\n  }\n\n  return {cells, newSafeCells}\n}\n\nexport const RevealAdjacentCells = (cells, xCoord, yCoord, newSafeCells) => {\n  let toShow = [];\n  let lostGame = false;\n  let losingX, losingY;\n  toShow.push(cells[xCoord][yCoord]);\n  while (toShow.length !== 0) {\n      let one = toShow.pop();\n      let i = one.x;\n      let j = one.y;\n\n      // reveal\n      if (i > 0 && j > 0 && !cells[i - 1][j - 1].revealed && !cells[i - 1][j - 1].flagged) {\n        cells[i - 1][j - 1].revealed = true;\n        newSafeCells--;\n        if (cells[i - 1][j - 1].value !== 'X') {\n          if (cells[i - 1][j - 1].value === 0) {\n            ({cells, newSafeCells} = RevealCells(cells, i - 1, j - 1, newSafeCells));\n          }\n        } else {\n          losingX = i - 1;\n          losingY = j - 1;\n          lostGame = true;\n        }\n      }\n      if (j > 0 && !cells[i][j - 1].revealed && !cells[i][j - 1].flagged) {\n        cells[i][j - 1].revealed = true;\n        newSafeCells--;\n        if (cells[i][j - 1].value !== 'X') {\n          if (cells[i][j - 1].value === 0) {\n            ({cells, newSafeCells} = RevealCells(cells, i, j - 1, newSafeCells));\n          }\n        } else {\n          losingX = i;\n          losingY = j - 1;\n          lostGame = true;\n        }\n      }\n  \n      if (i < cells.length - 1 && j > 0 && !cells[i + 1][j - 1].revealed && !cells[i + 1][j - 1].flagged) {\n        cells[i + 1][j - 1].revealed = true;\n        newSafeCells--;\n        if (cells[i + 1][j - 1].value !== 'X') {\n          if (cells[i + 1][j - 1].value === 0) {\n            ({cells, newSafeCells} = RevealCells(cells, i + 1, j - 1, newSafeCells));\n          }\n        } else {\n          losingX = i + 1;\n          losingY = j - 1;\n          lostGame = true;\n        }\n      }\n      if (i > 0 && !cells[i - 1][j].revealed && !cells[i - 1][j].flagged) {\n        cells[i - 1][j].revealed = true;\n        newSafeCells--;\n        if (cells[i - 1][j].value !== 'X') {\n          if (cells[i - 1][j].value === 0) {\n            ({cells, newSafeCells} = RevealCells(cells, i - 1, j, newSafeCells));\n          }\n        } else {\n          losingX = i - 1;\n          losingY = j;\n          lostGame = true;\n        }\n      }\n      if (i < cells.length - 1 && !cells[i + 1][j].revealed && !cells[i + 1][j].flagged) {\n        cells[i + 1][j].revealed = true;\n        newSafeCells--;\n        if (cells[i + 1][j].value !== 'X') {\n          if (cells[i + 1][j].value === 0) {\n            ({cells, newSafeCells} = RevealCells(cells, i + 1, j, newSafeCells));\n          }\n        } else {\n          losingX = i + 1;\n          losingY = j - 1;\n          lostGame = true;\n        }\n      }\n      if (i > 0 && j < cells[0].length - 1 && !cells[i - 1][j + 1].revealed && !cells[i - 1][j + 1].flagged) {\n        cells[i - 1][j + 1].revealed = true;\n        newSafeCells--;\n        if (cells[i - 1][j + 1].value !== 'X') {\n          if (cells[i - 1][j + 1].value === 0) {\n            ({cells, newSafeCells} = RevealCells(cells, i - 1, j + 1, newSafeCells));\n          }\n        } else {\n          losingX = i - 1;\n          losingY = j + 1;\n          lostGame = true;\n        }\n      }  \n      if (j < cells[0].length - 1 && !cells[i][j + 1].revealed && !cells[i][j + 1].flagged) {\n        cells[i][j + 1].revealed = true;\n        newSafeCells--;\n        if (cells[i][j + 1].value !== 'X') {\n          if (cells[i][j + 1].value === 0) {\n            ({cells, newSafeCells} = RevealCells(cells, i, j + 1, newSafeCells));\n          }\n        } else {\n          losingX = i;\n          losingY = j + 1;\n          lostGame = true;\n        }\n      }\n      if (i < cells.length - 1 && j < cells[0].length - 1 && !cells[i + 1][j + 1].revealed && !cells[i + 1][j + 1].flagged) {\n        cells[i + 1][j + 1].revealed = true;\n        newSafeCells--;\n        if (cells[i + 1][j + 1].value !== 'X') {\n          if (cells[i + 1][j + 1].value === 0) {\n            ({cells, newSafeCells} = RevealCells(cells, i + 1, j + 1, newSafeCells));\n          }\n        } else {\n          losingX = i + 1;\n          losingY = j + 1;\n          lostGame = true;\n        }\n      }\n  }\n\n  return {cells, newSafeCells, lostGame, losingX, losingY}\n}\n\nexport const CountFlags = (cells, xCoord, yCoord) => {\n  let count = 0;\n\n  // count\n  if (xCoord > 0 && yCoord > 0 && cells[xCoord - 1][yCoord - 1].flagged) {\n    count++;\n  }\n  if (yCoord > 0 && cells[xCoord][yCoord - 1].flagged) {\n    count++;\n  }\n  if (xCoord < cells.length - 1 && yCoord > 0 && cells[xCoord + 1][yCoord - 1].flagged) {\n    count++;\n  }\n  if (xCoord > 0 && cells[xCoord - 1][yCoord].flagged) {\n    count++;\n  }\n  if (xCoord < cells.length - 1 && cells[xCoord + 1][yCoord].flagged) {\n    count++;\n  }\n  if (xCoord > 0 && yCoord < cells[0].length - 1 && cells[xCoord - 1][yCoord + 1].flagged) {\n    count++;\n  }  \n  if (yCoord < cells[0].length - 1 && cells[xCoord][yCoord + 1].flagged) {\n    count++;\n  }\n  if (xCoord < cells.length - 1 && yCoord < cells[0].length - 1 && cells[xCoord + 1][yCoord + 1].flagged) {\n    count++;\n  }\n\n  return count;\n}\n","import * as React from 'react';\nimport './index.scss';\n\nconst Cell = (props) => {\n  const { cellInfo, flagCell, lostGame, revealAdjacent, revealCell } = props;\n\n  const getCellValue = () => {\n    if (cellInfo.revealed) {\n      if (cellInfo.isHitMine || cellInfo.value === 'X') {\n        return <span>&#128163;</span>\n      }\n      if (cellInfo.value > 0) {\n        return <span className=\"number\">{cellInfo.value}</span>;\n      }\n    }\n    if (cellInfo.flagged) {\n      return <span className=\"board-cell__flagged\">&#128681;</span>\n    }\n    return '';\n  }\n\n  return (\n    <div\n      className={`board-cell ${cellInfo.revealed && 'board-cell__revealed'} ${cellInfo.isHitMine && 'board-cell__hit-mine'}`}\n      onClick={() => !lostGame && revealCell(cellInfo.x, cellInfo.y)}\n      onDoubleClick={(e) => revealAdjacent(e, cellInfo.x, cellInfo.y)}\n      onContextMenu={(e) => flagCell(e, cellInfo.x, cellInfo.y)}\n    >\n      {getCellValue()}\n    </div>\n  )\n}\n\nexport default Cell;\n","import * as React from 'react';\nimport './index.scss';\n\nconst Modal = (props) => {\n  const { close, difficulty, setCustomDifficultyParams, setDifficulty, setZoomed, visible, zoomed } = props;\n\n  const [customHeight, setCustomHeight] = React.useState(9);\n  const [customWidth, setCustomWidth] = React.useState(9);\n  const [customMines, setCustomMines] = React.useState(10);\n  const [darkMode, setDarkMode] = React.useState(false);\n  const [difficultySetting, setDifficultySetting] = React.useState(difficulty);\n  const [page, setPage] = React.useState(0);\n\n  React.useEffect(() => {\n    if (difficultySetting === 'custom') {\n      setCustomDifficultyParams([customHeight, customWidth, customMines]);\n    }\n    setDifficulty(difficultySetting);\n\n  }, [customHeight, customMines, customWidth, difficultySetting, setCustomDifficultyParams, setDifficulty])\n\n  React.useEffect(() => {\n    if (darkMode) {\n      document.querySelector('.App').classList.add('dark-mode');\n    } else {\n      document.querySelector('.App').classList.remove('dark-mode');\n    }\n  }, [darkMode])\n\n  return visible && (\n    <>\n      <div className=\"backdrop\" />\n      <div className=\"settings-modal\">\n        <h2>Minesweeper Menu</h2>\n        <ul className=\"options-list\">\n          <li><button className={`options-button ${page === 0 && 'options-button__selected'}`} onClick={() => setPage(0)}>Game Difficulty</button></li>\n          <li><button className={`options-button ${page === 1 && 'options-button__selected'}`} onClick={() => setPage(1)}>Display Settings</button></li>\n          <li><button className={`options-button ${page === 2 && 'options-button__selected'}`} onClick={() => setPage(2)}>Instructions</button></li>\n          {/* TODO */}\n          {/* <li><button className={`options-button ${page === 3 && 'options-button__selected'}`} onClick={() => setPage(3)}>Import/Export</button></li> */}\n        </ul>\n        {page === 0 && (\n          <>\n            <em><small>NOTE: Changing game difficulty will start a new game.</small></em>\n            <table>\n              <thead>\n                <tr>\n                  <th />\n                  <th>Height</th>\n                  <th>Width</th>\n                  <th>Mines</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td>\n                    <input checked={difficultySetting === 'beginner'} type=\"radio\" onChange={() => setDifficultySetting('beginner')} />\n                    <strong>Beginner</strong>\n                  </td>\n                  <td>9</td>\n                  <td>9</td>\n                  <td>10</td>\n                </tr>\n                <tr>\n                  <td>\n                    <input checked={difficultySetting === 'intermediate'} type=\"radio\" onChange={() => setDifficultySetting('intermediate')} />\n                    <strong>Intermediate</strong>\n                  </td>\n                  <td>16</td>\n                  <td>16</td>\n                  <td>40</td>\n                </tr>\n                <tr>\n                  <td>\n                    <input checked={difficultySetting === 'expert'} type=\"radio\" onChange={() => setDifficultySetting('expert')} />\n                    <strong>Expert</strong>\n                  </td>\n                  <td>16</td>\n                  <td>30</td>\n                  <td>99</td>\n                </tr>\n                <tr>\n                  <td>\n                    <input checked={difficultySetting === 'custom'} type=\"radio\" onChange={() => setDifficultySetting('custom')} />\n                    <strong>Custom</strong>\n                  </td>\n                  <td><input onChange={(e) => e.target.value >= 5 && e.target.value <= 18 ? setCustomHeight(e.target.value) : setCustomHeight(18)} type=\"number\" value={customHeight} /></td>\n                  <td><input onChange={(e) => e.target.value >= 5 && e.target.value <= 32 ? setCustomWidth(e.target.value) : setCustomWidth(32)} type=\"number\" value={customWidth} /></td>\n                  <td><input onChange={(e) => e.target.value >= 5 && e.target.value <= customHeight * customWidth - 1 ? setCustomMines(e.target.value) : setCustomMines(customHeight * customWidth - 1)} type=\"number\" value={customMines} /></td>\n                </tr>\n              </tbody>\n            </table>\n          </>\n        )}\n        {page === 1 && (\n          <>\n            <h4>Zoom</h4>\n            <div>\n              <input checked={!zoomed} type=\"radio\" onChange={() => setZoomed(0)} /> Regular\n              <input checked={zoomed} type=\"radio\" onChange={() => setZoomed(1)} /> Large\n            </div>\n            <hr />\n            <h4>Enable Dark Mode?</h4>\n            <div>\n              <input checked={darkMode} type=\"checkbox\" onChange={() => setDarkMode(!darkMode)} />\n            </div>\n          </>\n        )}\n        {page === 2 && (\n          <>\n            <h4>Object of the Game</h4>\n            Reveal all the spaces without mines as quickly as possible. Clicking a mine is an instant loss!\n            <div className=\"instructions\">\n              <ul>\n                <li><strong>Single Left Click</strong> an empty square to reveal.</li>\n                <li><strong>Single Right Click</strong> an empty square to flag it as a mine. This will prevent the space from being revealed unless you flagged incorrectly.</li>\n                <li><strong>Double Left Click</strong> a number to reveal adjacent squares if you have flagged the number of adjacent spaces indicated.</li>\n                <li><strong>Single Left Click</strong> the face to start a new game.</li>\n              </ul>\n            </div>\n          </>\n        )}\n        <button className=\"interaction-button\" onClick={close}>Return to Game</button>\n      </div>\n    </>\n  );\n}\n\nexport default Modal;\n","import axios from 'axios';\n\nconst api = {\n  get: (path) => {\n    return axios.get(path)\n      .then(response => response)\n      .catch(err => { throw err });\n  },\n  post: (path, body) => {\n    return axios.post(path, body)\n      .then(response => response)\n      .catch(err => { throw err });\n  }\n};\n\nexport default api;\n","import api from '../api';\n\nexport const getScores = (dateRange, difficulty) => {\n  return api.get(`/scores?dateRange=${dateRange}&difficulty=${difficulty}`);\n}\n\nexport const saveScore = (body) => {\n  return api.post('/scores', body);\n}\n","import moment from 'moment';\nimport * as React from 'react';\nimport { saveScore } from '../../../api/services/scoreService';\nimport './index.scss';\n\nconst NamePrompt = (props) => {\n  const { close, difficulty, setUpdatedBoard, timer, visible } = props;\n  const [name, setName] = React.useState('');\n\n  const submitScore = () => {\n    const getDifficulty = () => {\n      switch (difficulty) {\n        case 'intermediate':\n          return 2;\n        case 'expert':\n          return 3;\n        case 'beginer':\n        default:\n          return 1;\n      }\n    }\n    saveScore({\n      user: name,\n      difficulty: getDifficulty(),\n      time: Math.round(timer),\n      timestamp: moment().valueOf(),\n    })\n    setUpdatedBoard(true);\n    close();\n  }\n\n  return visible && (difficulty === 'beginner' || difficulty === 'intermediate' || difficulty ==='expert') && (\n    <>\n      <div className=\"backdrop\" />\n      <div className=\"prompt-modal\">\n        <h2>You win!</h2>\n        <div>\n          <div>It took you {Math.round(timer)} seconds!</div>\n          <h4>Please enter your name for the Leader Board:</h4>\n          <input onChange={e => setName(e.target.value)} placeholder=\"Enter name...\" />\n        </div>\n        <div className=\"social-share\">\n          <a href={`https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fminesweeper-react-eh.herokuapp.com&quote=I%20just%20beat%20Minesweeper%20in%20${Math.round(timer)}%20seconds%20on%20${difficulty}%20difficulty!`} rel=\"noreferrer\" target=\"_blank\">\n            Share on Facebook\n          </a>\n          <div>or</div>\n          <a href={`https://twitter.com/intent/tweet?text=I%20just%20beat%20%23Minesweeper%20in%20${Math.round(timer)}%20seconds%20on%20${difficulty}%20difficulty!&url=https%3A%2F%2Fminesweeper-react-eh.herokuapp.com`} rel=\"noreferrer\" target=\"_blank\">\n            Share on Twitter\n          </a>\n        </div>\n        <button className=\"interaction-button\" disabled={name.length < 1} onClick={submitScore}>Save Record</button>\n      </div>\n    </>\n  );\n}\n\nexport default NamePrompt;\n","import * as React from 'react';\nimport GenerateGameBoard from '../../utils/GenerateGameBoard';\nimport { CountFlags, RevealCells, RevealAdjacentCells } from '../../utils/RevealCells';\nimport Cell from './Cell';\nimport Modal from './Modal';\nimport './index.scss';\nimport NamePrompt from './NamePrompt';\n\nconst GameBoard = ({ setUpdatedBoard }) => {\n  const [boardGrid, setBoardGrid] = React.useState([]);\n  const [customDifficultyParams, setCustomDifficultyParams] = React.useState([9, 9, 10])\n  const [difficulty, setDifficulty] = React.useState('beginner');\n  const [inClick, setInClick] = React.useState(false);\n  const [lostGame, setLostGame] = React.useState(false);\n  const [mineFlagsRemaining, setMineFlagsRemaining] = React.useState(0);\n  const [mineLocation, setMineLocation] = React.useState([]);\n  const [nonMineCount, setNonMineCount] = React.useState(0);\n  const [showModal, setShowModal] = React.useState(false);\n  const [showPrompt, setShowPrompt] = React.useState(false);\n  const [startedGame, setStartedGame] = React.useState(false);\n  const [timer, setTimer] = React.useState(0);\n  const [wonGame, setWonGame] = React.useState(false);\n  const [zoomed, setZoomed] = React.useState(false);\n\n  const flagCell = (e, xCoord, yCoord) => {\n    e.preventDefault();\n    let newBoardGrid = JSON.parse(JSON.stringify(boardGrid));\n    if (!newBoardGrid[xCoord][yCoord].revealed) {\n      if (newBoardGrid[xCoord][yCoord].flagged) {\n        newBoardGrid[xCoord][yCoord].flagged = false;\n        setMineFlagsRemaining(mineFlagsRemaining + 1);\n      } else {\n        newBoardGrid[xCoord][yCoord].flagged = true;\n        setMineFlagsRemaining(mineFlagsRemaining - 1);\n      }\n    }\n    setBoardGrid(newBoardGrid);\n  }\n  \n  const getFace = () => {\n    if (lostGame) {\n      return <span>&#128565;</span>;\n    }\n    if (wonGame) {\n      return <span>&#128526;</span>;\n    }\n    if (inClick) {\n      return <span>&#128558;</span>;\n    }\n    return <span>&#128578;</span>;\n  }\n\n  const revealAdjacent = (e, xCoord, yCoord) => {\n    e.preventDefault();\n    setInClick(true);\n    let newBoardGrid = JSON.parse(JSON.stringify(boardGrid));\n    if (newBoardGrid[xCoord][yCoord].revealed === true) {\n      const flagCount = CountFlags(newBoardGrid, xCoord, yCoord);\n      if (flagCount === Number(newBoardGrid[xCoord][yCoord].value)) {\n        const revealedBoard = RevealAdjacentCells(newBoardGrid, xCoord, yCoord, nonMineCount);\n        if (revealedBoard.lostGame) {\n          setLostGame(true);\n          newBoardGrid[revealedBoard.losingX][revealedBoard.losingY].isHitMine = true;  \n            for (let i = 0; i < mineLocation.length; i++) {\n              newBoardGrid[mineLocation[i][0]][mineLocation[i][1]].revealed = true;\n            }\n        }\n        setBoardGrid(revealedBoard.cells);\n        setNonMineCount(revealedBoard.newSafeCells);\n      }\n    }\n    setTimeout(() => setInClick(false), 200);\n  }\n\n  const revealCell = (xCoord, yCoord) => {\n    setInClick(true);\n    let newBoardGrid = JSON.parse(JSON.stringify(boardGrid));\n    if (!newBoardGrid[xCoord][yCoord].flagged) {\n      if (newBoardGrid[xCoord][yCoord].value === \"X\") {\n        setLostGame(true);\n        newBoardGrid[xCoord][yCoord].isHitMine = true;  \n          for (let i = 0; i < mineLocation.length; i++) {\n            newBoardGrid[mineLocation[i][0]][mineLocation[i][1]].revealed = true;\n          }\n          setBoardGrid(newBoardGrid);\n      }\n      else {\n        const revealedBoard = RevealCells(newBoardGrid, xCoord, yCoord, nonMineCount);\n        setBoardGrid(revealedBoard.cells);\n        setNonMineCount(revealedBoard.newSafeCells);\n      }\n    }\n    setTimeout(() => setInClick(false), 200);\n  }\n\n  const createBoard = React.useCallback(() => {\n    const gameParams = () => {\n      switch (difficulty) {\n        case 'custom':\n          return customDifficultyParams;\n        case 'expert':\n          return [16, 30, 99];\n        case 'intermediate':\n          return [16, 16, 40];\n        case 'beginner':\n        default:\n          return [9, 9, 10];\n      }\n    }\n    const newGame = GenerateGameBoard(gameParams()[0], gameParams()[1], gameParams()[2]);\n    setWonGame(false);\n    setLostGame(false);\n    setStartedGame(false);\n    setTimer(0);\n    setMineFlagsRemaining(gameParams()[2]);\n    setNonMineCount(gameParams()[0] * gameParams()[1] - gameParams()[2])\n    setMineLocation(newGame.mineLocation);\n    setBoardGrid(newGame.board);\n  }, [customDifficultyParams, difficulty]);\n\n  React.useEffect(() => {\n    if (nonMineCount === 0) {\n      setWonGame(true);\n    }\n  }, [nonMineCount])\n\n  React.useEffect(() => {\n    if (wonGame) {\n      setShowPrompt(true);\n    }\n  }, [wonGame])\n\n  React.useEffect(() => {\n    createBoard();    \n  }, [createBoard, difficulty])\n\n  React.useEffect(() => {\n    const countUp = () => {\n      setTimer((time) => time + 0.0175);\n    }; \n    \n    if (lostGame || wonGame || timer > 998) {\n      clearTimeout(countUp);\n    } else if (startedGame) {\n      setTimeout(countUp, 10); \n    }\n\n    return () => {\n      clearTimeout(countUp);\n    }\n  }, [startedGame, lostGame, timer, wonGame])\n\n  return (\n    <div className=\"game-container\">\n      <div className={`board-wrapper ${zoomed ? 'board-wrapper__zoomed' : ''}`}>\n        <div className=\"board-header\">\n          <div className=\"number-display\">{mineFlagsRemaining >= 0 ? ('000' + mineFlagsRemaining).substr(-3) : '000'}</div>\n          <button onClick={createBoard}>{getFace()}</button>\n          <div className=\"number-display\">{('000' + Math.round(timer)).substr(-3)}</div>\n        </div>\n        <div className=\"board-container\" onClick={() => setStartedGame(true)}>\n          {boardGrid.map((gridRow, gridIdx) => (\n            <div className=\"board-row\" key={gridIdx}>\n              {gridRow.map((gridColumn, idx) => (\n                <Cell cellInfo={gridColumn} flagCell={flagCell} key={idx} lostGame={lostGame} revealAdjacent={revealAdjacent} revealCell={revealCell} />\n              ))}\n            </div>\n          ))}\n        </div>\n      </div>\n      <button className=\"interaction-button\" onClick={() => setShowModal(true)}>Open Menu</button>\n      <Modal close={() => setShowModal(false)} difficulty={difficulty} setCustomDifficultyParams={setCustomDifficultyParams} setDifficulty={setDifficulty} setZoomed={setZoomed} visible={showModal} zoomed={zoomed} />\n      <NamePrompt close={() => setShowPrompt(false)} difficulty={difficulty} setUpdatedBoard={setUpdatedBoard} timer={timer} visible={showPrompt} />\n    </div>\n  )\n}\n\nexport default GameBoard;\n","import * as React from 'react';\nimport moment from 'moment';\nimport { getScores } from '../../api/services/scoreService';\nimport './index.scss';\n\nconst LeaderBoard = ({ setUpdatedBoard, updatedBoard }) => {\n  const [dateRange, setDateRange] = React.useState(moment().startOf('day').valueOf());\n  const [scoresBeginner, setScoresBeginner] = React.useState([]);\n  const [scoresIntermediate, setScoresIntermediate] = React.useState([]);\n  const [scoresExpert, setScoresExpert] = React.useState([]);\n  const [selectedRange, setSelectedRange] = React.useState('today');\n\n  React.useEffect(() => {\n    Promise.all([getScores(dateRange, 1), getScores(dateRange, 2), getScores(dateRange, 3)])\n    .then((scores) => {\n      setScoresBeginner(scores[0].data);\n      setScoresIntermediate(scores[1].data);\n      setScoresExpert(scores[2].data);\n    });\n    setUpdatedBoard(false);\n  }, [dateRange, updatedBoard])\n\n  React.useEffect(() => {\n    switch (selectedRange) {\n      case '7days':\n        setDateRange(moment().subtract(7, 'days').valueOf());\n        break;\n      case '30days':\n        setDateRange(moment().subtract(30, 'days').valueOf());\n        break;\n      case 'allTime':\n        setDateRange(0);\n        break;\n      case 'today':\n      default:\n        setDateRange(moment().startOf('day').valueOf());\n        break;\n    }\n  }, [selectedRange, setDateRange])\n\n  return (\n    <div className=\"leaderboard-wrapper\">\n      <h2>Current Leader Board</h2>\n      <div className=\"leaderboard-switcher\">\n        <button className={selectedRange === 'today' ? 'selected' : ''} onClick={() => setSelectedRange('today')}>Today</button>\n        <button className={selectedRange === '7days' ? 'selected' : ''} onClick={() => setSelectedRange('7days')}>Last 7 Days</button>\n        <button className={selectedRange === '30days' ? 'selected' : ''} onClick={() => setSelectedRange('30days')}>Last 30 Days</button>\n        <button className={selectedRange === 'allTime' ? 'selected' : ''} onClick={() => setSelectedRange('allTime')}>All Time</button>\n      </div>\n      <div className=\"leaderboard-body\">\n        <div>\n          <h4>Beginner</h4>\n          {scoresBeginner.length > 0 && scoresBeginner.map((score, idx) => (\n            <div key={idx}>{idx + 1}. {score.user} -- {score.time} seconds</div>\n          ))}\n        </div>\n        <div>\n          <h4>Intermediate</h4>\n          {scoresIntermediate.length > 0 && scoresIntermediate.map((score, idx) => (\n            <div key={idx}>{idx + 1}. {score.user} -- {score.time} seconds</div>\n          ))}\n        </div>\n        <div>\n          <h4>Expert</h4>\n          {scoresExpert.length > 0 && scoresExpert.map((score, idx) => (\n            <div key={idx}>{idx + 1}. {score.user} -- {score.time} seconds</div>\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default LeaderBoard;\n","import * as React from 'react';\nimport './App.css';\nimport GameBoard from './components/GameBoard';\nimport LeaderBoard from './components/LeaderBoard';\n\nfunction App() {\n  const [updatedBoard, setUpdatedBoard] = React.useState(false);\n\n  return (\n    <div className=\"App\">\n      <h1>React Minesweeper</h1>\n      <em>Programmed by <a href=\"https://edghar88.github.io/\">Edgar Harwood</a></em>\n      <GameBoard setUpdatedBoard={setUpdatedBoard} />\n      <LeaderBoard setUpdatedBoard={setUpdatedBoard} updatedBoard={updatedBoard}  />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}