{"ast":null,"code":"var _jsxFileName = \"/Users/edgar/projects/minesweeper-react/client/src/components/Game/GameBoard/index.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport GenerateGameBoard from '../../../utils/GenerateGameBoard';\nimport Cell from '../Cell';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GameBoard = () => {\n  _s();\n\n  var _boardGrid$board;\n\n  const [boardGrid, setBoardGrid] = React.useState([]);\n  const [difficulty, setDifficulty] = React.useState('beginner');\n  React.useEffect(() => {\n    const gameParams = () => {\n      switch (difficulty) {\n        case 'beginner':\n        default:\n          return [9, 9, 10];\n      }\n    };\n\n    const newGame = GenerateGameBoard(gameParams()[0], gameParams()[1], gameParams()[2]);\n    console.log(newGame);\n    setBoardGrid(newGame);\n  }, [difficulty]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board-container\",\n    children: boardGrid && ((_boardGrid$board = boardGrid.board) === null || _boardGrid$board === void 0 ? void 0 : _boardGrid$board.map(gridRow => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: gridRow.map(gridColumn => /*#__PURE__*/_jsxDEV(Cell, {\n        cellInfo: gridColumn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GameBoard, \"GHH2PCOCUfWBkMEpG0aBmNikZpI=\");\n\n_c = GameBoard;\nexport default GameBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"sources":["/Users/edgar/projects/minesweeper-react/client/src/components/Game/GameBoard/index.js"],"names":["React","GenerateGameBoard","Cell","GameBoard","boardGrid","setBoardGrid","useState","difficulty","setDifficulty","useEffect","gameParams","newGame","console","log","board","map","gridRow","gridColumn"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,OAAOC,IAAP,MAAiB,SAAjB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAAA;;AACtB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,KAAK,CAACM,QAAN,CAAe,EAAf,CAAlC;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,KAAK,CAACM,QAAN,CAAe,UAAf,CAApC;AAEAN,EAAAA,KAAK,CAACS,SAAN,CAAgB,MAAM;AACpB,UAAMC,UAAU,GAAG,MAAM;AACvB,cAAQH,UAAR;AACE,aAAK,UAAL;AACA;AACE,iBAAO,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,CAAP;AAHJ;AAKD,KAND;;AAOA,UAAMI,OAAO,GAAGV,iBAAiB,CAACS,UAAU,GAAG,CAAH,CAAX,EAAkBA,UAAU,GAAG,CAAH,CAA5B,EAAmCA,UAAU,GAAG,CAAH,CAA7C,CAAjC;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACAN,IAAAA,YAAY,CAACM,OAAD,CAAZ;AAED,GAZD,EAYG,CAACJ,UAAD,CAZH;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,cACGH,SAAS,yBAAIA,SAAS,CAACU,KAAd,qDAAI,iBAAiBC,GAAjB,CAAsBC,OAAD,iBACjC;AAAA,gBACGA,OAAO,CAACD,GAAR,CAAaE,UAAD,iBACX,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADY,CAAJ;AADZ;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CA7BD;;GAAMd,S;;KAAAA,S;AA+BN,eAAeA,SAAf","sourcesContent":["import * as React from 'react';\nimport GenerateGameBoard from '../../../utils/GenerateGameBoard';\nimport Cell from '../Cell';\n\nconst GameBoard = () => {\n  const [boardGrid, setBoardGrid] = React.useState([]);\n  const [difficulty, setDifficulty] = React.useState('beginner');\n\n  React.useEffect(() => {\n    const gameParams = () => {\n      switch (difficulty) {\n        case 'beginner':\n        default:\n          return [9, 9, 10];\n      }\n    }\n    const newGame = GenerateGameBoard(gameParams()[0], gameParams()[1], gameParams()[2]);\n    console.log(newGame);\n    setBoardGrid(newGame);\n    \n  }, [difficulty])\n\n  return (\n    <div className=\"board-container\">\n      {boardGrid && boardGrid.board?.map((gridRow) => (\n        <div>\n          {gridRow.map((gridColumn) => (\n            <Cell cellInfo={gridColumn} />\n          ))}\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default GameBoard;\n"]},"metadata":{},"sourceType":"module"}