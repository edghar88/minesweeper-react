{"ast":null,"code":"var _jsxFileName = \"/Users/edgar/projects/minesweeper-react/client/src/components/LeaderBoard/index.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport moment from 'moment';\nimport { getScores } from '../../api/services/scoreService';\nimport './index.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LeaderBoard = () => {\n  _s();\n\n  const [dateRange, setDateRange] = React.useState(moment().startOf('day').valueOf());\n  const [scoresBeginner, setScoresBeginner] = React.useState([]);\n  const [scoresIntermediate, setScoresIntermediate] = React.useState([]);\n  const [scoresExpert, setScoresExpert] = React.useState([]);\n  const [selectedRange, setSelectedRange] = React.useState('today');\n  React.useEffect(() => {\n    Promise.all([getScores(dateRange, 1), getScores(dateRange, 2), getScores(dateRange, 3)]).then(scores => {\n      setScoresBeginner(scores[0].data);\n      setScoresIntermediate(scores[1].data);\n      setScoresExpert(scores[2].data);\n    });\n  }, [dateRange]);\n  React.useEffect(() => {\n    switch (selectedRange) {\n      case '7days':\n        setDateRange(moment().subtract(7, 'days').valueOf());\n        break;\n\n      case '30days':\n        setDateRange(moment().subtract(30, 'days').valueOf());\n        break;\n\n      case 'allTime':\n        setDateRange(0);\n        break;\n\n      case 'today':\n      default:\n        setDateRange(moment().startOf('day').valueOf());\n        break;\n    }\n  }, [selectedRange, setDateRange]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"leaderboard-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Current Leader Board\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leaderboard-switcher\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: selectedRange === 'today' ? 'selected' : '',\n        onClick: () => setSelectedRange('today'),\n        children: \"Today\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: selectedRange === '7days' ? 'selected' : '',\n        onClick: () => setSelectedRange('7days'),\n        children: \"Last 7 Days\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: selectedRange === '30days' ? 'selected' : '',\n        onClick: () => setSelectedRange('30days'),\n        children: \"Last 30 Days\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: selectedRange === 'allTime' ? 'selected' : '',\n        onClick: () => setSelectedRange('allTime'),\n        children: \"All Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leaderboard-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Beginner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), scoresBeginner.length > 0 && scoresBeginner.map((score, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [idx + 1, \". \", score.user, \" -- \", score.time, \" seconds\"]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Intermediate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), scoresIntermediate.length > 0 && scoresIntermediate.map((score, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [idx + 1, \". \", score.user, \" -- \", score.time, \" seconds\"]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Expert\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), scoresExpert.length > 0 && scoresExpert.map((score, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [idx + 1, \". \", score.user, \" -- \", score.time, \" seconds\"]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LeaderBoard, \"eBSiVQW+uIfQn9g21jZcfdXEcfA=\");\n\n_c = LeaderBoard;\nexport default LeaderBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"LeaderBoard\");","map":{"version":3,"sources":["/Users/edgar/projects/minesweeper-react/client/src/components/LeaderBoard/index.js"],"names":["React","moment","getScores","LeaderBoard","dateRange","setDateRange","useState","startOf","valueOf","scoresBeginner","setScoresBeginner","scoresIntermediate","setScoresIntermediate","scoresExpert","setScoresExpert","selectedRange","setSelectedRange","useEffect","Promise","all","then","scores","data","subtract","length","map","score","idx","user","time"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport moment from 'moment';\nimport { getScores } from '../../api/services/scoreService';\nimport './index.scss';\n\nconst LeaderBoard = () => {\n  const [dateRange, setDateRange] = React.useState(moment().startOf('day').valueOf());\n  const [scoresBeginner, setScoresBeginner] = React.useState([]);\n  const [scoresIntermediate, setScoresIntermediate] = React.useState([]);\n  const [scoresExpert, setScoresExpert] = React.useState([]);\n  const [selectedRange, setSelectedRange] = React.useState('today');\n\n  React.useEffect(() => {\n    Promise.all([getScores(dateRange, 1), getScores(dateRange, 2), getScores(dateRange, 3)])\n    .then((scores) => {\n      setScoresBeginner(scores[0].data);\n      setScoresIntermediate(scores[1].data);\n      setScoresExpert(scores[2].data);\n    })\n  }, [dateRange])\n\n  React.useEffect(() => {\n    switch (selectedRange) {\n      case '7days':\n        setDateRange(moment().subtract(7, 'days').valueOf());\n        break;\n      case '30days':\n        setDateRange(moment().subtract(30, 'days').valueOf());\n        break;\n      case 'allTime':\n        setDateRange(0);\n        break;\n      case 'today':\n      default:\n        setDateRange(moment().startOf('day').valueOf());\n        break;\n    }\n  }, [selectedRange, setDateRange])\n\n  return (\n    <div className=\"leaderboard-wrapper\">\n      <h2>Current Leader Board</h2>\n      <div className=\"leaderboard-switcher\">\n        <button className={selectedRange === 'today' ? 'selected' : ''} onClick={() => setSelectedRange('today')}>Today</button>\n        <button className={selectedRange === '7days' ? 'selected' : ''} onClick={() => setSelectedRange('7days')}>Last 7 Days</button>\n        <button className={selectedRange === '30days' ? 'selected' : ''} onClick={() => setSelectedRange('30days')}>Last 30 Days</button>\n        <button className={selectedRange === 'allTime' ? 'selected' : ''} onClick={() => setSelectedRange('allTime')}>All Time</button>\n      </div>\n      <div className=\"leaderboard-body\">\n        <div>\n          <h4>Beginner</h4>\n          {scoresBeginner.length > 0 && scoresBeginner.map((score, idx) => (\n            <div key={idx}>{idx + 1}. {score.user} -- {score.time} seconds</div>\n          ))}\n        </div>\n        <div>\n          <h4>Intermediate</h4>\n          {scoresIntermediate.length > 0 && scoresIntermediate.map((score, idx) => (\n            <div key={idx}>{idx + 1}. {score.user} -- {score.time} seconds</div>\n          ))}\n        </div>\n        <div>\n          <h4>Expert</h4>\n          {scoresExpert.length > 0 && scoresExpert.map((score, idx) => (\n            <div key={idx}>{idx + 1}. {score.user} -- {score.time} seconds</div>\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default LeaderBoard;\n"]},"metadata":{},"sourceType":"module"}