{"ast":null,"code":"var _jsxFileName = \"/Users/edgar/projects/minesweeper-react/client/src/components/GameBoard/index.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport GenerateGameBoard from '../../utils/GenerateGameBoard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GameBoard = () => {\n  _s();\n\n  const [boardGrid, setBoardGrid] = React.useState([]);\n  const [difficulty, setDifficulty] = React.useState('beginner');\n  React.useEffect(() => {\n    switch (difficulty) {\n      case 'beginner':\n      default:\n        const newGame = GenerateGameBoard(9, 9, 10);\n        console.log(newGame);\n        setBoardGrid(newGame);\n        break;\n    }\n  }, [difficulty]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board-container\",\n    children: boardGrid.map(gridRow => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: gridRow.map(gridColumn => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-cell\",\n        children: JSON.stringify(gridColumn.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GameBoard, \"GHH2PCOCUfWBkMEpG0aBmNikZpI=\");\n\n_c = GameBoard;\nexport default GameBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"sources":["/Users/edgar/projects/minesweeper-react/client/src/components/GameBoard/index.js"],"names":["React","GenerateGameBoard","GameBoard","boardGrid","setBoardGrid","useState","difficulty","setDifficulty","useEffect","newGame","console","log","map","gridRow","gridColumn","JSON","stringify","value"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,iBAAP,MAA8B,+BAA9B;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,KAAK,CAACK,QAAN,CAAe,EAAf,CAAlC;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,KAAK,CAACK,QAAN,CAAe,UAAf,CAApC;AAEAL,EAAAA,KAAK,CAACQ,SAAN,CAAgB,MAAM;AACpB,YAAQF,UAAR;AACE,WAAK,UAAL;AACA;AACE,cAAMG,OAAO,GAAGR,iBAAiB,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,CAAjC;AACAS,QAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACAL,QAAAA,YAAY,CAACK,OAAD,CAAZ;AACA;AANJ;AAQD,GATD,EASG,CAACH,UAAD,CATH;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,cACGH,SAAS,CAACS,GAAV,CAAeC,OAAD,iBACb;AAAA,gBACGA,OAAO,CAACD,GAAR,CAAaE,UAAD,iBACX;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,kBACGC,IAAI,CAACC,SAAL,CAAeF,UAAU,CAACG,KAA1B;AADH;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CA5BD;;GAAMf,S;;KAAAA,S;AA8BN,eAAeA,SAAf","sourcesContent":["import * as React from 'react';\nimport GenerateGameBoard from '../../utils/GenerateGameBoard';\n\nconst GameBoard = () => {\n  const [boardGrid, setBoardGrid] = React.useState([]);\n  const [difficulty, setDifficulty] = React.useState('beginner');\n\n  React.useEffect(() => {\n    switch (difficulty) {\n      case 'beginner':\n      default:\n        const newGame = GenerateGameBoard(9, 9, 10);\n        console.log(newGame);\n        setBoardGrid(newGame);\n        break;\n    }\n  }, [difficulty])\n\n  return (\n    <div className=\"board-container\">\n      {boardGrid.map((gridRow) => (\n        <div>\n          {gridRow.map((gridColumn) => (\n            <div className=\"board-cell\">\n              {JSON.stringify(gridColumn.value)}\n            </div>\n          ))}\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default GameBoard;\n"]},"metadata":{},"sourceType":"module"}