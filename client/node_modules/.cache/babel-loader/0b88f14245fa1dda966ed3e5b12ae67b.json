{"ast":null,"code":"const RevealCells = (cells, xCoord, yCoord, newSafeCells) => {\n  let toShow = [];\n  toShow.push(cells[xCoord][yCoord]);\n  console.log(toShow);\n\n  while (toShow.length !== 0) {\n    let one = toShow.pop();\n    let i = one.x;\n    let j = one.y;\n\n    if (!one.revealed) {\n      newSafeCells--;\n      one.revealed = true;\n    }\n\n    if (one.value !== 0) {\n      break;\n    } // reveal adjacent cells\n\n\n    if (i > 0 && j > 0 && cells[i - 1][j - 1].value === 0 && !cells[i - 1][j - 1].revealed) {\n      toShow.push(cells[i - 1][j - 1]);\n    }\n\n    if (i < cells.length - 1 && j < cells[0].length - 1 && cells[i + 1][j + 1].value === 0 && !cells[i + 1][j + 1].revealed) {\n      toShow.push(cells[i + 1][j + 1]);\n    }\n\n    if (i > 0 && j < cells[0].length - 1 && cells[i - 1][j + 1].value === 0 && !cells[i - 1][j + 1].revealed) {\n      toShow.push(cells[i - 1][j + 1]);\n    }\n\n    if (i < cells.length - 1 && j > 0 && cells[i + 1][j - 1].value === 0 && !cells[i + 1][j - 1].revealed) {\n      toShow.push(cells[i + 1][j - 1]);\n    }\n\n    if (i > 0 && cells[i - 1][j].value === 0 && !cells[i - 1][j].revealed) {\n      toShow.push(cells[i - 1][j]);\n    }\n\n    if (j < cells[0].length - 1 && cells[i][j + 1].value === 0 && !cells[i][j + 1].revealed) {\n      toShow.push(cells[i][j + 1]);\n    }\n\n    if (i < cells.length - 1 && cells[i + 1][j].value === 0 && !cells[i + 1][j].revealed) {\n      toShow.push(cells[i + 1][j]);\n    }\n\n    if (j > 0 && cells[i][j - 1].value === 0 && !cells[i][j - 1].revealed) {\n      toShow.push(cells[i][j - 1]);\n    } // reveal\n\n\n    if (i > 0 && j > 0 && !cells[i - 1][j - 1].revealed) {\n      cells[i - 1][j - 1].revealed = true;\n      newSafeCells--;\n    }\n\n    if (j > 0 && !cells[i][j - 1].revealed) {\n      cells[i][j - 1].revealed = true;\n      newSafeCells--;\n    }\n\n    if (i < cells.length - 1 && j > 0 && !cells[i + 1][j - 1].revealed) {\n      cells[i + 1][j - 1].revealed = true;\n      newSafeCells--;\n    }\n\n    if (i > 0 && !cells[i - 1][j].revealed) {\n      cells[i - 1][j].revealed = true;\n      newSafeCells--;\n    }\n\n    if (i < cells.length - 1 && !cells[i + 1][j].revealed) {\n      cells[i + 1][j].revealed = true;\n      newSafeCells--;\n    }\n\n    if (i > 0 && j < cells[0].length - 1 && !cells[i - 1][j + 1].revealed) {\n      cells[i - 1][j + 1].revealed = true;\n      newSafeCells--;\n    }\n\n    if (j < cells[0].length - 1 && !cells[i][j + 1].revealed) {\n      cells[i][j + 1].revealed = true;\n      newSafeCells--;\n    }\n\n    if (i < cells.length - 1 && j < cells[0].length - 1 && !cells[i + 1][j + 1].revealed) {\n      cells[i + 1][j + 1].revealed = true;\n      newSafeCells--;\n    }\n  }\n\n  return {\n    cells,\n    newSafeCells\n  };\n};\n\n_c = RevealCells;\nexport default RevealCells;\n\nvar _c;\n\n$RefreshReg$(_c, \"RevealCells\");","map":{"version":3,"sources":["/Users/edgar/projects/minesweeper-react/client/src/utils/RevealCells.js"],"names":["RevealCells","cells","xCoord","yCoord","newSafeCells","toShow","push","console","log","length","one","pop","i","x","j","y","revealed","value"],"mappings":"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","sourcesContent":["const RevealCells = (cells, xCoord, yCoord, newSafeCells) => {\n  let toShow = [];\n  toShow.push(cells[xCoord][yCoord]);\n  console.log(toShow);\n  while (toShow.length !== 0) {\n      let one = toShow.pop();\n      let i = one.x;\n      let j = one.y;\n      if (!one.revealed) {\n        newSafeCells--;\n        one.revealed = true;\n      }\n      if (one.value !== 0) {\n          break;\n      }\n\n      // reveal adjacent cells\n      if (i > 0 && j > 0 && cells[i - 1][j - 1].value === 0 && !cells[i - 1][j - 1].revealed) {\n        toShow.push(cells[i - 1][j - 1]);\n      }\n      if (i < cells.length - 1 && j < cells[0].length - 1 && cells[i + 1][j + 1].value === 0 && !cells[i + 1][j + 1].revealed) {\n        toShow.push(cells[i + 1][j + 1]);\n      }\n      if (i > 0 && j < cells[0].length - 1 && cells[i - 1][j + 1].value === 0 && !cells[i - 1][j + 1].revealed) {\n        toShow.push(cells[i - 1][j + 1]);\n      }\n      if (i < cells.length - 1 && j > 0 && cells[i + 1][j - 1].value === 0 && !cells[i + 1][j - 1].revealed) {\n        toShow.push(cells[i + 1][j - 1]);\n      }\n      if (i > 0 && cells[i - 1][j].value === 0 && !cells[i - 1][j].revealed) {\n        toShow.push(cells[i - 1][j]);\n      }\n      if (j < cells[0].length - 1 && cells[i][j + 1].value === 0 && !cells[i][j + 1].revealed) {\n        toShow.push(cells[i][j + 1]);\n      }\n      if (i < cells.length - 1 && cells[i + 1][j].value === 0 && !cells[i + 1][j].revealed) {\n        toShow.push(cells[i + 1][j]);\n      }\n      if (j > 0 && cells[i][j - 1].value === 0 && !cells[i][j - 1].revealed) {\n        toShow.push(cells[i][j - 1]);\n      }\n\n      // reveal\n      if (i > 0 && j > 0 && !cells[i - 1][j - 1].revealed) {\n        cells[i - 1][j - 1].revealed = true;\n        newSafeCells--;\n      }\n      if (j > 0 && !cells[i][j - 1].revealed) {\n        cells[i][j - 1].revealed = true;\n        newSafeCells--;\n      }\n  \n      if (i < cells.length - 1 && j > 0 && !cells[i + 1][j - 1].revealed) {\n        cells[i + 1][j - 1].revealed = true;\n        newSafeCells--;\n      }\n      if (i > 0 && !cells[i - 1][j].revealed) {\n        cells[i - 1][j].revealed = true;\n        newSafeCells--;\n      }\n      if (i < cells.length - 1 && !cells[i + 1][j].revealed) {\n        cells[i + 1][j].revealed = true;\n        newSafeCells--;\n      }\n      if (i > 0 && j < cells[0].length - 1 && !cells[i - 1][j + 1].revealed) {\n        cells[i - 1][j + 1].revealed = true;\n        newSafeCells--;\n      }  \n      if (j < cells[0].length - 1 && !cells[i][j + 1].revealed) {\n        cells[i][j + 1].revealed = true;\n        newSafeCells--;\n      }\n      if (i < cells.length - 1 && j < cells[0].length - 1 && !cells[i + 1][j + 1].revealed) {\n        cells[i + 1][j + 1].revealed = true;\n        newSafeCells--;\n      }\n  }\n\n  return {cells, newSafeCells}\n}\n\nexport default RevealCells;\n"]},"metadata":{},"sourceType":"module"}