{"ast":null,"code":"var _jsxFileName = \"/Users/edgar/projects/minesweeper-react/client/src/components/GameBoard/Cell/index.js\";\nimport * as React from 'react';\nimport './index.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cell = props => {\n  const {\n    cellInfo,\n    flagCell,\n    lostGame,\n    revealCell\n  } = props;\n\n  const getCellValue = () => {\n    if (cellInfo.revealed) {\n      if (cellInfo.isHitMine || cellInfo.value === 'X') {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\uD83D\\uDCA3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 16\n        }, this);\n      }\n\n      if (cellInfo.value > 0) {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"number\",\n          children: cellInfo.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 16\n        }, this);\n      }\n    }\n\n    if (cellInfo.flagged) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"board-cell__flagged\",\n        children: \"\\uD83D\\uDEA9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 14\n      }, this);\n    }\n\n    return '';\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `board-cell ${cellInfo.revealed && 'board-cell__revealed'} ${cellInfo.isHitMine && 'board-cell__hit-mine'}`,\n    onClick: () => revealCell(cellInfo.x, cellInfo.y),\n    onContextMenu: e => flagCell(e, cellInfo.x, cellInfo.y),\n    children: getCellValue()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Cell;\nexport default Cell;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cell\");","map":{"version":3,"sources":["/Users/edgar/projects/minesweeper-react/client/src/components/GameBoard/Cell/index.js"],"names":["React","Cell","props","cellInfo","flagCell","lostGame","revealCell","getCellValue","revealed","isHitMine","value","flagged","x","y","e"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,cAAP;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACtB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,QAAZ;AAAsBC,IAAAA,QAAtB;AAAgCC,IAAAA;AAAhC,MAA+CJ,KAArD;;AAEA,QAAMK,YAAY,GAAG,MAAM;AACzB,QAAIJ,QAAQ,CAACK,QAAb,EAAuB;AACrB,UAAIL,QAAQ,CAACM,SAAT,IAAsBN,QAAQ,CAACO,KAAT,KAAmB,GAA7C,EAAkD;AAChD,4BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD;;AACD,UAAIP,QAAQ,CAACO,KAAT,GAAiB,CAArB,EAAwB;AACtB,4BAAO;AAAM,UAAA,SAAS,EAAC,QAAhB;AAAA,oBAA0BP,QAAQ,CAACO;AAAnC;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD;AACF;;AACD,QAAIP,QAAQ,CAACQ,OAAb,EAAsB;AACpB,0BAAO;AAAM,QAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AACD,WAAO,EAAP;AACD,GAbD;;AAeA,sBACE;AACE,IAAA,SAAS,EAAG,cAAaR,QAAQ,CAACK,QAAT,IAAqB,sBAAuB,IAAGL,QAAQ,CAACM,SAAT,IAAsB,sBAAuB,EADvH;AAEE,IAAA,OAAO,EAAE,MAAMH,UAAU,CAACH,QAAQ,CAACS,CAAV,EAAaT,QAAQ,CAACU,CAAtB,CAF3B;AAGE,IAAA,aAAa,EAAGC,CAAD,IAAOV,QAAQ,CAACU,CAAD,EAAIX,QAAQ,CAACS,CAAb,EAAgBT,QAAQ,CAACU,CAAzB,CAHhC;AAAA,cAKGN,YAAY;AALf;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CA3BD;;KAAMN,I;AA6BN,eAAeA,IAAf","sourcesContent":["import * as React from 'react';\nimport './index.scss';\n\nconst Cell = (props) => {\n  const { cellInfo, flagCell, lostGame, revealCell } = props;\n\n  const getCellValue = () => {\n    if (cellInfo.revealed) {\n      if (cellInfo.isHitMine || cellInfo.value === 'X') {\n        return <span>&#128163;</span>\n      }\n      if (cellInfo.value > 0) {\n        return <span className=\"number\">{cellInfo.value}</span>;\n      }\n    }\n    if (cellInfo.flagged) {\n      return <span className=\"board-cell__flagged\">&#128681;</span>\n    }\n    return '';\n  }\n\n  return (\n    <div\n      className={`board-cell ${cellInfo.revealed && 'board-cell__revealed'} ${cellInfo.isHitMine && 'board-cell__hit-mine'}`}\n      onClick={() => revealCell(cellInfo.x, cellInfo.y)}\n      onContextMenu={(e) => flagCell(e, cellInfo.x, cellInfo.y)}\n    >\n      {getCellValue()}\n    </div>\n  )\n}\n\nexport default Cell;\n"]},"metadata":{},"sourceType":"module"}