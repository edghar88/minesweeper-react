{"ast":null,"code":"export var RevealCells=function RevealCells(cells,xCoord,yCoord,newSafeCells){var toShow=[];toShow.push(cells[xCoord][yCoord]);while(toShow.length!==0){var one=toShow.pop();var i=one.x;var j=one.y;if(!one.revealed){newSafeCells--;one.revealed=true;}if(one.value!==0){break;}// reveal adjacent cells\nif(i>0&&j>0&&cells[i-1][j-1].value===0&&!cells[i-1][j-1].revealed){toShow.push(cells[i-1][j-1]);}if(i<cells.length-1&&j<cells[0].length-1&&cells[i+1][j+1].value===0&&!cells[i+1][j+1].revealed){toShow.push(cells[i+1][j+1]);}if(i>0&&j<cells[0].length-1&&cells[i-1][j+1].value===0&&!cells[i-1][j+1].revealed){toShow.push(cells[i-1][j+1]);}if(i<cells.length-1&&j>0&&cells[i+1][j-1].value===0&&!cells[i+1][j-1].revealed){toShow.push(cells[i+1][j-1]);}if(i>0&&cells[i-1][j].value===0&&!cells[i-1][j].revealed){toShow.push(cells[i-1][j]);}if(j<cells[0].length-1&&cells[i][j+1].value===0&&!cells[i][j+1].revealed){toShow.push(cells[i][j+1]);}if(i<cells.length-1&&cells[i+1][j].value===0&&!cells[i+1][j].revealed){toShow.push(cells[i+1][j]);}if(j>0&&cells[i][j-1].value===0&&!cells[i][j-1].revealed){toShow.push(cells[i][j-1]);}// reveal\nif(i>0&&j>0&&!cells[i-1][j-1].revealed){cells[i-1][j-1].revealed=true;newSafeCells--;}if(j>0&&!cells[i][j-1].revealed){cells[i][j-1].revealed=true;newSafeCells--;}if(i<cells.length-1&&j>0&&!cells[i+1][j-1].revealed){cells[i+1][j-1].revealed=true;newSafeCells--;}if(i>0&&!cells[i-1][j].revealed){cells[i-1][j].revealed=true;newSafeCells--;}if(i<cells.length-1&&!cells[i+1][j].revealed){cells[i+1][j].revealed=true;newSafeCells--;}if(i>0&&j<cells[0].length-1&&!cells[i-1][j+1].revealed){cells[i-1][j+1].revealed=true;newSafeCells--;}if(j<cells[0].length-1&&!cells[i][j+1].revealed){cells[i][j+1].revealed=true;newSafeCells--;}if(i<cells.length-1&&j<cells[0].length-1&&!cells[i+1][j+1].revealed){cells[i+1][j+1].revealed=true;newSafeCells--;}}return{cells:cells,newSafeCells:newSafeCells};};export var RevealAdjacentCells=function RevealAdjacentCells(cells,xCoord,yCoord,newSafeCells){var toShow=[];var lostGame=false;var losingX,losingY;toShow.push(cells[xCoord][yCoord]);while(toShow.length!==0){var one=toShow.pop();var i=one.x;var j=one.y;// reveal\nif(i>0&&j>0&&!cells[i-1][j-1].revealed&&!cells[i-1][j-1].flagged){cells[i-1][j-1].revealed=true;newSafeCells--;if(cells[i-1][j-1].value!=='X'){if(cells[i-1][j-1].value===0){var _RevealCells=RevealCells(cells,i-1,j-1,newSafeCells);cells=_RevealCells.cells;newSafeCells=_RevealCells.newSafeCells;}}else{losingX=i-1;losingY=j-1;lostGame=true;}}if(j>0&&!cells[i][j-1].revealed&&!cells[i][j-1].flagged){cells[i][j-1].revealed=true;newSafeCells--;if(cells[i][j-1].value!=='X'){if(cells[i][j-1].value===0){var _RevealCells2=RevealCells(cells,i,j-1,newSafeCells);cells=_RevealCells2.cells;newSafeCells=_RevealCells2.newSafeCells;}}else{losingX=i;losingY=j-1;lostGame=true;}}if(i<cells.length-1&&j>0&&!cells[i+1][j-1].revealed&&!cells[i+1][j-1].flagged){cells[i+1][j-1].revealed=true;newSafeCells--;if(cells[i+1][j-1].value!=='X'){if(cells[i+1][j-1].value===0){var _RevealCells3=RevealCells(cells,i+1,j-1,newSafeCells);cells=_RevealCells3.cells;newSafeCells=_RevealCells3.newSafeCells;}}else{losingX=i+1;losingY=j-1;lostGame=true;}}if(i>0&&!cells[i-1][j].revealed&&!cells[i-1][j].flagged){cells[i-1][j].revealed=true;newSafeCells--;if(cells[i-1][j].value!=='X'){if(cells[i-1][j].value===0){var _RevealCells4=RevealCells(cells,i-1,j,newSafeCells);cells=_RevealCells4.cells;newSafeCells=_RevealCells4.newSafeCells;}}else{losingX=i-1;losingY=j;lostGame=true;}}if(i<cells.length-1&&!cells[i+1][j].revealed&&!cells[i+1][j].flagged){cells[i+1][j].revealed=true;newSafeCells--;if(cells[i+1][j].value!=='X'){if(cells[i+1][j].value===0){var _RevealCells5=RevealCells(cells,i+1,j,newSafeCells);cells=_RevealCells5.cells;newSafeCells=_RevealCells5.newSafeCells;}}else{losingX=i+1;losingY=j-1;lostGame=true;}}if(i>0&&j<cells[0].length-1&&!cells[i-1][j+1].revealed&&!cells[i-1][j+1].flagged){cells[i-1][j+1].revealed=true;newSafeCells--;if(cells[i-1][j+1].value!=='X'){if(cells[i-1][j+1].value===0){var _RevealCells6=RevealCells(cells,i-1,j+1,newSafeCells);cells=_RevealCells6.cells;newSafeCells=_RevealCells6.newSafeCells;}}else{losingX=i-1;losingY=j+1;lostGame=true;}}if(j<cells[0].length-1&&!cells[i][j+1].revealed&&!cells[i][j+1].flagged){cells[i][j+1].revealed=true;newSafeCells--;if(cells[i][j+1].value!=='X'){if(cells[i][j+1].value===0){var _RevealCells7=RevealCells(cells,i,j+1,newSafeCells);cells=_RevealCells7.cells;newSafeCells=_RevealCells7.newSafeCells;}}else{losingX=i;losingY=j+1;lostGame=true;}}if(i<cells.length-1&&j<cells[0].length-1&&!cells[i+1][j+1].revealed&&!cells[i+1][j+1].flagged){cells[i+1][j+1].revealed=true;newSafeCells--;if(cells[i+1][j+1].value!=='X'){if(cells[i+1][j+1].value===0){var _RevealCells8=RevealCells(cells,i+1,j+1,newSafeCells);cells=_RevealCells8.cells;newSafeCells=_RevealCells8.newSafeCells;}}else{losingX=i+1;losingY=j+1;lostGame=true;}}}return{cells:cells,newSafeCells:newSafeCells,lostGame:lostGame,losingX:losingX,losingY:losingY};};export var CountFlags=function CountFlags(cells,xCoord,yCoord){var count=0;// count\nif(xCoord>0&&yCoord>0&&cells[xCoord-1][yCoord-1].flagged){count++;}if(yCoord>0&&cells[xCoord][yCoord-1].flagged){count++;}if(xCoord<cells.length-1&&yCoord>0&&cells[xCoord+1][yCoord-1].flagged){count++;}if(xCoord>0&&cells[xCoord-1][yCoord].flagged){count++;}if(xCoord<cells.length-1&&cells[xCoord+1][yCoord].flagged){count++;}if(xCoord>0&&yCoord<cells[0].length-1&&cells[xCoord-1][yCoord+1].flagged){count++;}if(yCoord<cells[0].length-1&&cells[xCoord][yCoord+1].flagged){count++;}if(xCoord<cells.length-1&&yCoord<cells[0].length-1&&cells[xCoord+1][yCoord+1].flagged){count++;}return count;};","map":{"version":3,"sources":["/Users/edgar/projects/minesweeper-react/client/src/utils/RevealCells.js"],"names":["RevealCells","cells","xCoord","yCoord","newSafeCells","toShow","push","length","one","pop","i","x","j","y","revealed","value","RevealAdjacentCells","lostGame","losingX","losingY","flagged","CountFlags","count"],"mappings":"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","sourcesContent":["export const RevealCells = (cells, xCoord, yCoord, newSafeCells) => {\n  let toShow = [];\n  toShow.push(cells[xCoord][yCoord]);\n  while (toShow.length !== 0) {\n      let one = toShow.pop();\n      let i = one.x;\n      let j = one.y;\n      if (!one.revealed) {\n        newSafeCells--;\n        one.revealed = true;\n      }\n      if (one.value !== 0) {\n          break;\n      }\n\n      // reveal adjacent cells\n      if (i > 0 && j > 0 && cells[i - 1][j - 1].value === 0 && !cells[i - 1][j - 1].revealed) {\n        toShow.push(cells[i - 1][j - 1]);\n      }\n      if (i < cells.length - 1 && j < cells[0].length - 1 && cells[i + 1][j + 1].value === 0 && !cells[i + 1][j + 1].revealed) {\n        toShow.push(cells[i + 1][j + 1]);\n      }\n      if (i > 0 && j < cells[0].length - 1 && cells[i - 1][j + 1].value === 0 && !cells[i - 1][j + 1].revealed) {\n        toShow.push(cells[i - 1][j + 1]);\n      }\n      if (i < cells.length - 1 && j > 0 && cells[i + 1][j - 1].value === 0 && !cells[i + 1][j - 1].revealed) {\n        toShow.push(cells[i + 1][j - 1]);\n      }\n      if (i > 0 && cells[i - 1][j].value === 0 && !cells[i - 1][j].revealed) {\n        toShow.push(cells[i - 1][j]);\n      }\n      if (j < cells[0].length - 1 && cells[i][j + 1].value === 0 && !cells[i][j + 1].revealed) {\n        toShow.push(cells[i][j + 1]);\n      }\n      if (i < cells.length - 1 && cells[i + 1][j].value === 0 && !cells[i + 1][j].revealed) {\n        toShow.push(cells[i + 1][j]);\n      }\n      if (j > 0 && cells[i][j - 1].value === 0 && !cells[i][j - 1].revealed) {\n        toShow.push(cells[i][j - 1]);\n      }\n\n      // reveal\n      if (i > 0 && j > 0 && !cells[i - 1][j - 1].revealed) {\n        cells[i - 1][j - 1].revealed = true;\n        newSafeCells--;\n      }\n      if (j > 0 && !cells[i][j - 1].revealed) {\n        cells[i][j - 1].revealed = true;\n        newSafeCells--;\n      }\n  \n      if (i < cells.length - 1 && j > 0 && !cells[i + 1][j - 1].revealed) {\n        cells[i + 1][j - 1].revealed = true;\n        newSafeCells--;\n      }\n      if (i > 0 && !cells[i - 1][j].revealed) {\n        cells[i - 1][j].revealed = true;\n        newSafeCells--;\n      }\n      if (i < cells.length - 1 && !cells[i + 1][j].revealed) {\n        cells[i + 1][j].revealed = true;\n        newSafeCells--;\n      }\n      if (i > 0 && j < cells[0].length - 1 && !cells[i - 1][j + 1].revealed) {\n        cells[i - 1][j + 1].revealed = true;\n        newSafeCells--;\n      }  \n      if (j < cells[0].length - 1 && !cells[i][j + 1].revealed) {\n        cells[i][j + 1].revealed = true;\n        newSafeCells--;\n      }\n      if (i < cells.length - 1 && j < cells[0].length - 1 && !cells[i + 1][j + 1].revealed) {\n        cells[i + 1][j + 1].revealed = true;\n        newSafeCells--;\n      }\n  }\n\n  return {cells, newSafeCells}\n}\n\nexport const RevealAdjacentCells = (cells, xCoord, yCoord, newSafeCells) => {\n  let toShow = [];\n  let lostGame = false;\n  let losingX, losingY;\n  toShow.push(cells[xCoord][yCoord]);\n  while (toShow.length !== 0) {\n      let one = toShow.pop();\n      let i = one.x;\n      let j = one.y;\n\n      // reveal\n      if (i > 0 && j > 0 && !cells[i - 1][j - 1].revealed && !cells[i - 1][j - 1].flagged) {\n        cells[i - 1][j - 1].revealed = true;\n        newSafeCells--;\n        if (cells[i - 1][j - 1].value !== 'X') {\n          if (cells[i - 1][j - 1].value === 0) {\n            ({cells, newSafeCells} = RevealCells(cells, i - 1, j - 1, newSafeCells));\n          }\n        } else {\n          losingX = i - 1;\n          losingY = j - 1;\n          lostGame = true;\n        }\n      }\n      if (j > 0 && !cells[i][j - 1].revealed && !cells[i][j - 1].flagged) {\n        cells[i][j - 1].revealed = true;\n        newSafeCells--;\n        if (cells[i][j - 1].value !== 'X') {\n          if (cells[i][j - 1].value === 0) {\n            ({cells, newSafeCells} = RevealCells(cells, i, j - 1, newSafeCells));\n          }\n        } else {\n          losingX = i;\n          losingY = j - 1;\n          lostGame = true;\n        }\n      }\n  \n      if (i < cells.length - 1 && j > 0 && !cells[i + 1][j - 1].revealed && !cells[i + 1][j - 1].flagged) {\n        cells[i + 1][j - 1].revealed = true;\n        newSafeCells--;\n        if (cells[i + 1][j - 1].value !== 'X') {\n          if (cells[i + 1][j - 1].value === 0) {\n            ({cells, newSafeCells} = RevealCells(cells, i + 1, j - 1, newSafeCells));\n          }\n        } else {\n          losingX = i + 1;\n          losingY = j - 1;\n          lostGame = true;\n        }\n      }\n      if (i > 0 && !cells[i - 1][j].revealed && !cells[i - 1][j].flagged) {\n        cells[i - 1][j].revealed = true;\n        newSafeCells--;\n        if (cells[i - 1][j].value !== 'X') {\n          if (cells[i - 1][j].value === 0) {\n            ({cells, newSafeCells} = RevealCells(cells, i - 1, j, newSafeCells));\n          }\n        } else {\n          losingX = i - 1;\n          losingY = j;\n          lostGame = true;\n        }\n      }\n      if (i < cells.length - 1 && !cells[i + 1][j].revealed && !cells[i + 1][j].flagged) {\n        cells[i + 1][j].revealed = true;\n        newSafeCells--;\n        if (cells[i + 1][j].value !== 'X') {\n          if (cells[i + 1][j].value === 0) {\n            ({cells, newSafeCells} = RevealCells(cells, i + 1, j, newSafeCells));\n          }\n        } else {\n          losingX = i + 1;\n          losingY = j - 1;\n          lostGame = true;\n        }\n      }\n      if (i > 0 && j < cells[0].length - 1 && !cells[i - 1][j + 1].revealed && !cells[i - 1][j + 1].flagged) {\n        cells[i - 1][j + 1].revealed = true;\n        newSafeCells--;\n        if (cells[i - 1][j + 1].value !== 'X') {\n          if (cells[i - 1][j + 1].value === 0) {\n            ({cells, newSafeCells} = RevealCells(cells, i - 1, j + 1, newSafeCells));\n          }\n        } else {\n          losingX = i - 1;\n          losingY = j + 1;\n          lostGame = true;\n        }\n      }  \n      if (j < cells[0].length - 1 && !cells[i][j + 1].revealed && !cells[i][j + 1].flagged) {\n        cells[i][j + 1].revealed = true;\n        newSafeCells--;\n        if (cells[i][j + 1].value !== 'X') {\n          if (cells[i][j + 1].value === 0) {\n            ({cells, newSafeCells} = RevealCells(cells, i, j + 1, newSafeCells));\n          }\n        } else {\n          losingX = i;\n          losingY = j + 1;\n          lostGame = true;\n        }\n      }\n      if (i < cells.length - 1 && j < cells[0].length - 1 && !cells[i + 1][j + 1].revealed && !cells[i + 1][j + 1].flagged) {\n        cells[i + 1][j + 1].revealed = true;\n        newSafeCells--;\n        if (cells[i + 1][j + 1].value !== 'X') {\n          if (cells[i + 1][j + 1].value === 0) {\n            ({cells, newSafeCells} = RevealCells(cells, i + 1, j + 1, newSafeCells));\n          }\n        } else {\n          losingX = i + 1;\n          losingY = j + 1;\n          lostGame = true;\n        }\n      }\n  }\n\n  return {cells, newSafeCells, lostGame, losingX, losingY}\n}\n\nexport const CountFlags = (cells, xCoord, yCoord) => {\n  let count = 0;\n\n  // count\n  if (xCoord > 0 && yCoord > 0 && cells[xCoord - 1][yCoord - 1].flagged) {\n    count++;\n  }\n  if (yCoord > 0 && cells[xCoord][yCoord - 1].flagged) {\n    count++;\n  }\n  if (xCoord < cells.length - 1 && yCoord > 0 && cells[xCoord + 1][yCoord - 1].flagged) {\n    count++;\n  }\n  if (xCoord > 0 && cells[xCoord - 1][yCoord].flagged) {\n    count++;\n  }\n  if (xCoord < cells.length - 1 && cells[xCoord + 1][yCoord].flagged) {\n    count++;\n  }\n  if (xCoord > 0 && yCoord < cells[0].length - 1 && cells[xCoord - 1][yCoord + 1].flagged) {\n    count++;\n  }  \n  if (yCoord < cells[0].length - 1 && cells[xCoord][yCoord + 1].flagged) {\n    count++;\n  }\n  if (xCoord < cells.length - 1 && yCoord < cells[0].length - 1 && cells[xCoord + 1][yCoord + 1].flagged) {\n    count++;\n  }\n\n  return count;\n}\n"]},"metadata":{},"sourceType":"module"}